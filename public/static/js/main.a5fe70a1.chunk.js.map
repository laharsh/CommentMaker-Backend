{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","handleSubmit","bind","toggleModal","this","setState","values","addComment","dishId","rating","author","comment","outline","isOpen","toggle","onSubmit","htmlFor","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","top","description","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","Contact","console","log","JSON","stringify","resetFeedbackForm","role","isNumber","isNaN","Number","validEmail","test","size","offset","checkbox","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","addDishes","payload","addComments","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","selectedDish","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","fetch","then","response","json","actions","reset","Dishes","action","Comments","toISOString","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","message","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a5fe70a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n                </div>\r\n            );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react'\r\nimport {Card, CardImg, CardText, CardBody, Modal, ModalHeader, ModalBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Row, Col, Label} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            isModalOpen: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n      this.toggleModal();\r\n      this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        // event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>\r\n                                    Rating\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.select\r\n                                        model=\".rating\"\r\n                                        name=\"rating\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comments\" md={12}>Comments</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"                                        \r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  function RenderDish({dish}) {\r\n    if (dish != null)\r\n      return (\r\n          <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n              <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n      );\r\n    else return <div></div>;\r\n  }\r\n\r\n  function RenderComments({comments, addComment, dishId}) {\r\n    if (comments == null) {\r\n      return <div></div>;\r\n    }\r\n    //Traversing through all the comments\r\n    const cmnts = comments.map((comment) => {\r\n      return (\r\n        <li key={comment.id}>\r\n          <p>{comment.comment}</p>\r\n          <p>\r\n            -- {comment.author}, &nbsp;\r\n            {new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"2-digit\",\r\n            }).format(new Date(comment.date))}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"col-12 \">\r\n        <h4> Comments </h4>\r\n        <ul className=\"list-unstyled\">{cmnts}</ul>\r\n        <CommentForm  dishId={dishId} addComment={addComment} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const  DishDetail = (props) => {\r\n\r\n    const dish = props.dish;\r\n    if (dish == null) {\r\n      return <div></div>;\r\n    }\r\n    if (props.isLoading) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    else if (props.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <h4>{props.errMess}</h4>\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    else if (props.dish != null) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>{props.dish.name}</h3>\r\n              <hr />\r\n            </div>                \r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n              <RenderDish dish={props.dish} />\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n              <div className=\"row\">\r\n              <RenderComments comments={props.comments}\r\n                addComment={props.addComment}\r\n                dishId={props.dish.id}\r\n              />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);      \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85212345678\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                            placeholder=\"Tel. Number\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                            }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                    </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderLeader ({leader}) {\r\n    return (\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <h6>{leader.designation}</h6>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />          \r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS'; \r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { addComment, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n\r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) }\r\n\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n  \r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId});\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading = {this.props.promotions.isLoading}\r\n              promosErrMess = {this.props.promotions.errMess}\r\n              leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess = {this.props.comments.errMess}\r\n            addComment={this.props.addComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes:[]\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { \r\n        errMess: null, \r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.comments.length;\r\n            comment.date = new Date().toISOString();\r\n            console.log(\"Comment: \", comment);\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n}","import * as ActionTypes from  './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null, \r\n    promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, errMess: null, isLoading: false, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, promotions: []};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders:[]\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}